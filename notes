cargo build --target wasm32-unknown-unknown
near deploy $ID --wasmFile target/wasm32-unknown-unknown/debug/marketplace.wasm

near call $ID new_default_metadata '{"owner_id": "'$ID'" }' --accountId $ID
near call $ID mint_nft '{"receiver_id": "'$ID'", "token_metadata": {}}' --accountId $ID --amount 1
near call $ID buy_nft '{"token_id": "0"}' --accountId $ID2 --gas 300000000000000
near call $ID delete_nft '{"token_id": "0"}' --accountId $ID --gas 300000000000000
near call $ID tokens_of '{"account_id": "'$ID'", "from_index": "0", "limit": 10}' --accountId $ID
near call $ID new_professional '{"account_id": "'$ID'", "category": "dev", "degree": true, "nickname": "user123"}' --accountId $ID
near call $ID new_employer '{"account_id": "'$ID'", "category": "dev"}' --accountId $ID


near call $ID new_professional '{"active": true, "category": {"PROGRAMMER": "TESTING"}}' --accountId $ID

For unit tests: 
cargo test -- --nocapture

TokenMetadata {
    title: Option<String>,
    description: Option<String>, 
    media: Option<String>, // URL to associated media
    media_hash: Option<Base64VecU8>, // Base64-encoded sha256 hash of content referenced by the `media` field. Required if `media` is included.
    copies: Option<u64>, // number of copies of this set of metadata in existence when token was minted.
    issued_at: Option<String>, // ISO 8601 datetime when token was issued or minted
    expires_at: Option<String>, // ISO 8601 datetime when token expires
    starts_at: Option<String>, // ISO 8601 datetime when token starts being valid
    updated_at: Option<String>, // ISO 8601 datetime when token was last updated
    extra: Option<String>, // anything extra the NFT wants to store on-chain. Can be stringified JSON.
    reference: Option<String>, // URL to an off-chain JSON file with more info.
    reference_hash: Option<Base64VecU8>, // Base64-encoded sha256 hash of JSON from reference field. Required if `reference` is included.